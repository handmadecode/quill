plugins
{
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven'
}

group = 'org.myire'
version = '2.1-dev.1'


repositories
{
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}


dependencies
{
    // The scent plugin requires the scent artifact to compile.
    compileOnly 'org.myire:scent:2.0'

    // The ivy import plugin requires the ivy artifact to compile.
    compileOnly 'org.apache.ivy:ivy:2.4.0'

    // The maven import plugin requires the maven-embedder artifact to compile, but only some of its
    // transitive dependencies.
    compileOnly('org.apache.maven:maven-embedder:3.6.1')
    {
        exclude group: 'javax.annotation'
        exclude group: 'javax.inject'
        exclude group: 'javax.enterprise'
        exclude group: 'com.google.guava'
        exclude group: 'com.google.inject'
        exclude group: 'commons-cli'
        exclude group: 'commons-io'
        exclude group: 'org.apache.commons'
        exclude group: 'org.apache.maven', module: 'maven-plugin-api'
        exclude group: 'org.apache.maven', module: 'maven-resolver-provider'
        exclude group: 'org.apache.maven', module: 'maven-resolver-impl'
        exclude group: 'org.apache.maven.resolver', module: 'maven-resolver-impl'
        exclude group: 'org.apache.maven.resolver', module: 'maven-resolver-spi'
        exclude group: 'org.apache.maven.resolver', module: 'maven-resolver-util'
        exclude group: 'org.apache.maven.shared'
        exclude group: 'org.sonatype.plexus'
        exclude group: 'org.slf4j'
    }

    // The cpd plugin requires the pmd-core artifact to compile, but none of its transitive
    // dependencies.
    compileOnly('net.sourceforge.pmd:pmd-core:6.1.0')
    {
        exclude group: 'com.beust', module: 'jcommander'
        exclude group: 'com.google.code.gson'
        exclude group: 'commons-io'
        exclude group: 'jaxen', module: 'jaxen'
        exclude group: 'net.java.dev.javacc'
        exclude group: 'net.sourceforge.saxon'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'org.ow2.asm'
    }

    // The SpotBugs additions plugin requires the SpotBugs plugin to compile
    compileOnly 'gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.27.0'
}


ext.sourceAndTargetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(GroovyCompile)
{
    sourceCompatibility = sourceAndTargetCompatibility
    targetCompatibility = sourceAndTargetCompatibility
}

tasks.withType(JavaCompile)
{
    sourceCompatibility = sourceAndTargetCompatibility
    targetCompatibility = sourceAndTargetCompatibility
}

task ('sourcesJar', type: Jar)
{
    classifier = 'sources'
    from sourceSets.main.allSource
}

task ('groovydocJar', type: Jar, dependsOn: groovydoc)
{
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}

task ('javadocJar', type: Jar, dependsOn: javadoc)
{
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task ('createPom')
{
    def pomFile = "$mavenPomDir/${project.archivesBaseName}-${project.version}.pom"
    outputs.file(pomFile)

    def pom = pom()
    pom.withXml
    {
        def pomRoot = asNode()
        def dependencies = pomRoot.get('dependencies')
        if (dependencies)
            pomRoot.remove(dependencies)

        new XmlParser().parse(file('meta/pom-template.xml')).children().each
        {
            pomRoot.append(it)
        }
    }

    doFirst { pom.writeTo(pomFile) }
}

build.finalizedBy 'sourcesJar', 'groovydocJar', 'javadocJar', 'createPom'
