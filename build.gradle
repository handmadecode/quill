plugins
{
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven'
    id 'com.gradle.plugin-publish' version '0.10.1'
}

group = 'org.myire'
version = '2.3.1'


repositories
{
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

// Load dependencies from external file
apply from: 'dependencies.gradle'

// Load plugin descriptor and id specifications from external file
apply from: 'pluginspecs.gradle'


ext.sourceAndTargetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(GroovyCompile)
{
    sourceCompatibility = sourceAndTargetCompatibility
    targetCompatibility = sourceAndTargetCompatibility
}

tasks.withType(JavaCompile)
{
    sourceCompatibility = sourceAndTargetCompatibility
    targetCompatibility = sourceAndTargetCompatibility
}

task ('sourcesJar', type: Jar)
{
    classifier = 'sources'
    from sourceSets.main.allSource
}

task ('groovydocJar', type: Jar, dependsOn: groovydoc)
{
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}

task ('javadocJar', type: Jar, dependsOn: javadoc)
{
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task ('createPom')
{
    def pomFile = "$mavenPomDir/${project.archivesBaseName}-${project.version}.pom"
    outputs.file(pomFile)

    def pom = pom()
    pom.withXml
    {
        def pomRoot = asNode()
        def dependencies = pomRoot.get('dependencies')
        if (dependencies)
            pomRoot.remove(dependencies)

        new XmlParser().parse(file('meta/pom-template.xml')).children().each
        {
            pomRoot.append(it)
        }
    }

    doFirst { pom.writeTo(pomFile) }
}

build.finalizedBy 'sourcesJar', 'groovydocJar', 'javadocJar', 'createPom'
