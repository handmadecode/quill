<?xml version="1.0"?>

<!--Requires PMD version 6.37 or greater -->

<ruleset name="Quill">

    <description>Quill PMD rules</description>


    <!-- PMD rules that when violated indicate a possible bug or unfinished code -->

    <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly"><priority>1</priority></rule>
    <rule ref="category/java/bestpractices.xml/CheckResultSet"><priority>1</priority></rule>
    <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray"><priority>1</priority></rule>
    <rule ref="category/java/bestpractices.xml/PrimitiveWrapperInstantiation"><priority>1</priority></rule>

    <rule ref="category/java/design.xml/AvoidRethrowingException"><priority>1</priority></rule>
    <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes"><priority>1</priority></rule>
    <rule ref="category/java/design.xml/ExceptionAsFlowControl"><priority>1</priority></rule>
    <rule ref="category/java/design.xml/SignatureDeclareThrowsException"><priority>1</priority></rule>

    <rule ref="category/java/errorprone.xml/AvoidCallingFinalize"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidCatchingNPE"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/BrokenNullCheck"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/ComparisonWithNaN"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptyFinalizer"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/FinalizeOverloaded"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/FinalizeShouldBeProtected"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/MisplacedNullCheck"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/ProperCloneImplementation"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals"><priority>1</priority></rule>
    <rule ref="category/java/errorprone.xml/UselessOperationOnImmutable"><priority>1</priority></rule>

    <rule ref="category/java/multithreading.xml/DontCallThreadRun"><priority>1</priority></rule>
    <rule ref="category/java/multithreading.xml/DoubleCheckedLocking"><priority>1</priority></rule>
    <rule ref="category/java/multithreading.xml/NonThreadSafeSingleton"><priority>1</priority></rule>
    <rule ref="category/java/multithreading.xml/UnsynchronizedStaticFormatter"><priority>1</priority></rule>

    <rule ref="category/java/security.xml/InsecureCryptoIv"><priority>1</priority></rule>


    <!-- PMD rules that expose bad programming practices that indicate lurking bugs or code that is
         difficult to maintain or suboptimal -->

    <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/LiteralsFirstInComparisons"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/MissingOverride"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/PreserveStackTrace"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/SystemPrintln"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/UnusedFormalParameter"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/UnusedLocalVariable"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/UnusedPrivateField"><priority>2</priority></rule>
    <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod"><priority>2</priority></rule>

    <rule ref="category/java/codestyle.xml/AvoidDollarSigns"><priority>2</priority></rule>
    <rule ref="category/java/codestyle.xml/PrematureDeclaration"><priority>2</priority></rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName"><priority>2</priority></rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryImport"><priority>2</priority></rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn"><priority>2</priority></rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryModifier"><priority>2</priority></rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryReturn"><priority>2</priority></rule>
    <rule ref="category/java/codestyle.xml/UselessQualifiedThis"><priority>2</priority></rule>

    <rule ref="category/java/design.xml/AvoidCatchingGenericException"><priority>2</priority></rule>
    <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException"><priority>2</priority></rule>
    <rule ref="category/java/design.xml/DoNotExtendJavaLangError"><priority>2</priority></rule>
    <rule ref="category/java/design.xml/SimplifiedTernary"><priority>2</priority></rule>
    <rule ref="category/java/design.xml/SimplifyBooleanExpressions"><priority>2</priority></rule>
    <rule ref="category/java/design.xml/SimplifyBooleanReturns"><priority>2</priority></rule>

    <rule ref="category/java/documentation.xml/UncommentedEmptyConstructor"><priority>2</priority></rule>
    <rule ref="category/java/documentation.xml/UncommentedEmptyMethodBody"><priority>2</priority></rule>

    <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
        <properties>
            <property name="maxDuplicateLiterals" value="3"/>
            <property name="skipAnnotations" value="true"/>
        </properties>
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/DoNotExtendJavaLangThrowable"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/DontImportSun"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptyCatchBlock">
        <properties>
            <property name="allowCommentedBlocks" value="true"/>
        </properties>
        <priority>2</priority>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyFinallyBlock"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptyIfStmt"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptyInitializer"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptyStatementBlock"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptyStatementNotInLoop"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptySwitchStatements"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptySynchronizedBlock"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptyTryBlock"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EmptyWhileStmt"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/EqualsNull"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/IdempotentOperations"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/ImplicitSwitchFallThrough"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/InstantiationToGetClass"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/JumbledIncrementer"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/MoreThanOneLogger"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/SuspiciousEqualsMethodName"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/SuspiciousOctalEscape"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/UnconditionalIfStatement"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary"><priority>2</priority></rule>
    <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings"><priority>2</priority></rule>

    <rule ref="category/java/performance.xml/AddEmptyString"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/AppendCharacterWithChar"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/AvoidArrayLoops"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/AvoidCalendarDateCreation"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/BigIntegerInstantiation"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/ConsecutiveLiteralAppends"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/InefficientEmptyStringCheck"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/InefficientStringBuffering"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/RedundantFieldInitializer"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/StringInstantiation"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/StringToString"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/UseArraysAsList"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/UseIndexOfChar"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/UselessStringValueOf"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/UseStringBufferForStringAppends"><priority>2</priority></rule>
    <rule ref="category/java/performance.xml/UseStringBufferLength"><priority>2</priority></rule>


    <!--PMD rules that indicate code design that may need refactoring -->

    <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/AccessorClassGeneration"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/AccessorMethodGeneration"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/ConstantsInInterface"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/LooseCoupling"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/UseStandardCharsets"><priority>3</priority></rule>
    <rule ref="category/java/bestpractices.xml/UseTryWithResources"><priority>3</priority></rule>

    <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass"><priority>3</priority></rule>
    <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending"><priority>3</priority></rule>
    <rule ref="category/java/codestyle.xml/BooleanGetMethodName"><priority>3</priority></rule>
    <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"><priority>3</priority></rule>
    <rule ref="category/java/codestyle.xml/IdenticalCatchBranches"><priority>3</priority></rule>
    <rule ref="category/java/codestyle.xml/NoPackage"><priority>3</priority></rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement"><priority>3</priority></rule>
    <rule ref="category/java/codestyle.xml/UseDiamondOperator"><priority>3</priority></rule>

    <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/CollapsibleIfStatements"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/CouplingBetweenObjects"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/CyclomaticComplexity">
        <properties>
            <property name="methodReportLevel" value="15"/>
        </properties>
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/ExcessiveImports"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/ExcessivePublicCount"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/ExcessiveParameterList"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/FinalFieldCouldBeStatic"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/ImmutableField"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/LogicInversion"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/NcssCount"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/NPathComplexity">
        <properties>
            <property name="reportLevel" value="300"/>
        </properties>
        <priority>3</priority>
    </rule>
    <rule ref="category/java/design.xml/SimplifyConditional"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/SwitchDensity"><priority>3</priority></rule>
    <rule ref="category/java/design.xml/UselessOverridingMethod"><priority>3</priority></rule>

    <rule ref="category/java/errorprone.xml/AvoidAssertAsIdentifier"><priority>3</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop"><priority>3</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier"><priority>3</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName"><priority>3</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName"><priority>3</priority></rule>
    <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause"><priority>3</priority></rule>
    <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass"><priority>3</priority></rule>

    <rule ref="category/java/performance.xml/AvoidFileStream"><priority>3</priority></rule>
    <rule ref="category/java/performance.xml/UseArrayListInsteadOfVector"><priority>3</priority></rule>
    <rule ref="category/java/performance.xml/OptimizableToArrayCall"><priority>3</priority></rule>

</ruleset>
